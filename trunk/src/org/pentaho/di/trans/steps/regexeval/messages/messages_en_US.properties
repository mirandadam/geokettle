#File generated by Pentaho Translator for package 'org.pentaho.di.trans.steps.regexeval' in locale 'en_US'
#
#
#Mon May 12 10:54:28 CEST 2008
RegexEval.Log.ErrorResultFieldMissing=Error result Field is missing
RegexEval.Log.ReadRow=Reading row \: 
RegexEvalDialog.Exception.CouldNotExecuteScript=Couldn''t execute this script\! Error\:
RegexEvalDialog.CaseInsensitive.Tooltip=CASE_INSENSITIVE to enables case-insensitive.\nBy default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.\n Unicode-aware case-insensitive matching can be enabled by specifying the UNICODE_CASE flag in conjunction with this flag.\nCase-insensitive matching can also be enabled via the embedded flag expression (?i).
RegexEvalMeta.CheckResult.ConnectedStepOK2=Step is receiving info from other steps.
RegexEvalDialog.Fields.Label=Capture Group Fields
RegexEvalMeta.CheckResult.ConnectedStepOK=Step is connected to previous one, receiving {0} fields
RegexEvalDialog.ColumnInfo.Nullif=Null If
RegexEval.Log.ErrorCaptureGroupFieldsMismatch=The number of capture groups in the regular expression ({0}) does not match the number of fields specified ({1})\!
RegexEvalDialog.UseVar.Label=Use variable substitution
RegexEvalMeta.CheckResult.ResultFieldnameOK=The result field name is specified.
RegexEvalDialog.ResultField.Label=Result Fieldname
RegexEvalMeta.CheckResult.ValueIsEmpty=Error\: value \#{0} is empty\!
"RegexEval.Log.ErrorInStep=Error in step \: {0}
RegexEvalDialog.DotAll.Tooltip=In dotall mode, the expression . matches any character, including a line terminator.\n By default this expression does not match line terminators.\nDotall mode can also be enabled via the embedded flag expression (?s).
RegexEvalDialog.ColumnInfo.Group=Group
RegexEvalMeta.CheckResult.NoResultFieldname=No result field name specified\!
RegexEvalDialog.ContentTab.TabTitle=Content
RegexEvalDialog.CanonEq.Label=Ignore differences in Unicode encodings
RegexEvalDialog.Matcher.Label=Field to evaluate
RegexEvalDialog.ColumnInfo.Length=Length
RegexEvalDialog.Exception.CouldNotExecuteScript2=General error executing script\:
RegexEvalDialog.Stepname.Label=Step name 
RegexEvalDialog.TestFailed.DialogMessage=Unable to get fields from previous steps because of an error
RegexEvalDialog.ErrorGettingSample=Error getting samples
RegexEvalDialog.FailedToGetFields.DialogMessage=Unable to get fields from previous steps because of an error
RegexEvalDialog.Exception.CouldNotGetFields=Couldn''t get fields from previous steps, please connect all needed hops\!
RegexEvalDialog.ErrorDialog.Title=ERROR
RegexEvalDialog.AllowCaptureGroups.Label=Create fields for capture groups
RegexEval.Log.ErrorFindingField=Error finding field\: 
RegexEvalDialog.Unix.Tooltip=In this mode, only the '\n' line terminator is recognized in the behavior of ., ^, and $.\nnix lines mode can also be enabled via the embedded flag expression (?d).
RegexEval.Log.ErrorMatcherMissing=Error missing Field to evaluate
RegexEvalDialog.ColumnInfo.Decimal=Decimal
RegexEvalDialog.SamplesListe=Samples list
RegexEvalDialog.Unix.Label=Enables Unix lines mode
RegexEvalDialog.AllowCaptureGroups.Tooltip=Allows the creation of new fields based on the capture groups defined in the regex.
RegexEvalDialog.ColumnInfo.Type=Type
RegexEval.Exception.ErrorResultFieldMissing=Error result Field is missing
RegexEvalDialog.ColumnInfo.Format=Format
RegexEvalDialog.ColumnInfo.Precision=Precision
RegexEvalDialog.ColumnInfo.Currency=Currency
RegexEvalDialog.Comment.Label=Permit whitespace and comments in pattern
RegexEvalMeta.CheckResult.ScriptCompiledOK2=Script executed without a problem
RegexEval.Exception.ErrorCaptureGroupFieldsMismatch=The number of capture groups in the regular expression ({0}) does not match the number of fields specified ({1})\!
RegexEval.Log.LineNumber=linenr 
RegexEvalDialog.UseVar.Tooltip=Use variable substitution
RegexEvalDialog.Unicode.Label=Enable Unicode-aware case folding
RegexEvalMeta.CheckResult.NoMatcher=Field to evaluate is missing\!
RegexEvalMeta.Exception.UnableToSaveStepInfo=Unable to save step information to the repository for id_step\=
RegexEvalDialog.ResultField.Tooltip=Result Field Name to add to output stream
RegexEvalDialog.ColumnInfo.IfNull=Default
RegexEvalMeta.CheckResult.RetrievedValue=\ - Retrieved value {0} of type {1}
RegexEvalMeta.Exception.UnableToLoadStepInfoFromXML=Unable to load step info from XML
RegexEvalDialog.Multiline.Tooltip=In multiline mode the expressions ^ and $ match just after or just before,\n respectively, a line terminator or the end of the input sequence.\n By default these expressions only match at the beginning and the end of the entire input sequence.\nMultiline mode can also be enabled via the embedded flag expression (?m).
RegexEvalMeta.CheckResult.MatcherOK=Field to evaluate is filled
RegexEvalDialog.Samples.Label=Samples
RegexEvalDialog.ColumnInfo.NewField=New field
RegexEval.Exception.CouldnotFindField=Couldn''t find field ''{0}'' in row\!
RegexEvalDialog.Javascript.Label=Regular expression \:
RegexEvalDialog.Exception.CouldNotCompileScript=Couldn''t compile this script\! Error\:
RegexEvalDialog.FailedToGetFields.DialogTitle=Unable to get fields
RegexEvalDialog.ColumnInfo.TrimType=Trim
RegexEval.Log.ErrorInStep=Error in step
RegexEvalDialog.CanonEq.Tooltip=CANON_EQ to ignore differences in Unicode encodings,\n unless you are sure your strings contain only US ASCII characters and you want to increase performance.
RegexEvalDialog.Script.Label=Regular expression  
RegexEvalDialog.Shell.Title=Regex evaluation
RegexEvalDialog.GeneralTab.TabTitle=Settings
RegexEvalDialog.Samples.Tooltip=Click here to display samples list
RegexEvalMeta.Exception.UnexpectedErrorInReadingStepInfo=Unexpected error reading step information from the repository
RegexEvalMeta.CheckResult.NoInputReceived=No input received from other steps\!
RegexEvalDialog.DotAll.Label=Enable dotall mode
RegexEvalDialog.Fields.Tooltip=Fields specified here will be populated (in order) by the capture groups defined in the Regex.
RegexEvalDialog.ErrorGettingSample.Exception=Error getting samples
RegexEvalDialog.CaseInsensitive.Label=Enables case-insensitive matching
RegexEvalDialog.Group.StepSettings.Label=Step settings
RegexEvalMeta.CheckResult.CouldNotExecuteScript2=General error executing script\:
RegexEvalMeta.CheckResult.CouldNotGetFieldsFromPreviousStep=Couldn''t get fields from previous steps, please connect all needed hops\!
RegexEvalDialog.Unicode.Tooltip=When this flag is specified then case-insensitive matching,\n when enabled by the CASE_INSENSITIVE flag, is done in a manner consistent with the Unicode Standard.\n By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.\nUnicode-aware case folding can also be enabled via the embedded flag expression (?u).
RegexEvalMeta.CheckResult.ErrorRetrievingValue=Error retrieving value {0}
RegexEvalDialog.Multiline.Label=Enable multiline mode
RegexEval.Exception.ErrorMatcherMissing=Error missing Field to evaluate
RegexEvalMeta.CheckResult.ScriptCompiledOK=Script compiled without a problem
RegexEvalDialog.Comment.Tooltip=In this mode, whitespace is ignored,\n and embedded comments starting with \# are ignored until the end of a line.\nComments mode can also be enabled via the embedded flag expression (?x).
RegexEvalMeta.CheckResult.FailedToGetValues=Trying to retrieve {0} fields\: 
RegexEvalMeta.CheckResult.CouldNotExecuteScript=Couldn''t execute this script\! Error\:
RegexEval.Log.Regexp=The regular expression is \: 
RegexEval.Log.ErrorStackTrace=Error stack trace\: 
RegexEvalDialog.SamplesListe.Title=Samples
RegexEvalDialog.CompiledScriptOK.DialogTitle=OK
